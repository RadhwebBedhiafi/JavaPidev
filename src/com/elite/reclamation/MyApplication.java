package com.elite.reclamation;


import com.codename1.io.FileSystemStorage;
import static com.codename1.ui.CN.*;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Toolbar;
import java.io.IOException;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.io.NetworkEvent;
import com.codename1.media.Media;
import com.codename1.media.MediaManager;
import com.codename1.messaging.Message;
import com.codename1.notifications.LocalNotification;
import com.codename1.notifications.LocalNotificationCallback;
import com.elite.reclamation.gui.ReclamationHomeForm;



/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class MyApplication implements LocalNotificationCallback {

    private Form current;
    private Resources theme;
    Integer idUserConnected;

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if(err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });        
    }
    
    public void start()  {
        if(current != null){
            current.show();
            return;
        }
       
        
                   LocalNotification n = new LocalNotification();
        n.setId("demo-notification");
        n.setAlertBody("It's time to take a break and look at me");
        n.setAlertTitle("Break Time!");
        
        //n.setAlertSound("/notification_sound_bells.mp3"); //file name must begin with notification_sound
        try {
            new ReclamationHomeForm().show();
             
       // Display.getInstance().sendSMS("+21652682503", "hhh");
       
   
          Display.getInstance().scheduleLocalNotification(
                n,
                System.currentTimeMillis()+ 10 * 1000, // fire date/time
                LocalNotification.REPEAT_MINUTE  // Whether to repeat and what frequency
                    
        );  
        } catch (IOException ex) {
        }
             
     
       
        
    }

    
    
   

    @Override
    public void localNotificationReceived(String notificationId) {
                System.out.println("Received local notification "+notificationId);
    }

}
